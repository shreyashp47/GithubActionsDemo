name: Android Release APK

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Release-Build"
        default: "Generate release build"
      testers:
        type: choice
        description: "Select testers"
        options:
          - android
          - internalTesters
          - everyone

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up environment
        run: |
          echo "STORE_FILE=${{ secrets.STORE_FILE }}" >> $GITHUB_ENV
          echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Create keystore.properties
        run: |
          echo "storeFile=${{ env.STORE_FILE }}" > keystore.properties
          echo "storePassword=${{ env.STORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ env.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ env.KEY_PASSWORD }}" >> keystore.properties

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Get APK file path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_ENV

      - name: Verify APK path
        run: |
          echo "APK file path: ${{ env.apkfile }}"
          ls -l ${{ env.apkfile }}

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: ${{ env.apkfile }}
